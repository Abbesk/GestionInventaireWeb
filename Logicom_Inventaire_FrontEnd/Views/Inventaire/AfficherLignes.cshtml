@model Logicom_Inventaire_FrontEnd.Models.Inventaire
@using iTextSharp.text
@using iTextSharp.text.pdf
@using QRCoder
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Détails inventaire</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
    <style>

        #scrollToTopButton {
            position: fixed;
            right: 0;
            top: 45%;
            transform: translate(0, -50%);
            z-index: 9999;
        }

        #scrollToBottomButton {
            position: fixed;
            right: 0;
            top: 55%;
            transform: translate(0, -50%);
            z-index: 9999;
        }
        .input-bordered {
            border-top-width: 1px;
            border-right-width: 1px;
            border-bottom-width: 1px;
            border-left-width: 1px;
            border-top-style: solid;
            border-right-style: solid;
            border-bottom-style: solid;
            border-left-style: solid;
            border-top-color: rgb(4, 0, 253);
            border-right-color: rgb(4, 0, 253);
            border-bottom-color: rgb(4, 0, 253);
            border-left-color: rgb(4, 0, 253);
            border-image-source: initial;
            border-image-slice: initial;
            border-image-width: initial;
            border-image-outset: initial;
            border-image-repeat: initial;
        }
        
        hr {
            border: 1px solid #000;
        }

        html, body {
            height: 100%;
        }

        body {
            margin-top: 10px;
            background-image: linear-gradient( #d4dcdc, #dfe4e6, #eaedef, #f5f6f7, #ffffff);
            background-repeat: no-repeat;
            background-size: cover;
        }
    </style>

    
</head>
<body>

    <div style="text-align:center">
        @{
            //string currentUrl = Request.Url.AbsoluteUri;
            QRCodeGenerator qrGenerator = new QRCodeGenerator();
            QRCodeData qrCodeData = qrGenerator.CreateQrCode("https://7bc6-41-226-12-27.eu.ngrok.io/Inventaire/Inventaire/AfficherLignes/" + Model.numinv, QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new QRCode(qrCodeData);
            using (var qrCodeImage = qrCode.GetGraphic(5))
            {
                MemoryStream ms = new MemoryStream();
                qrCodeImage.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                string base64String = Convert.ToBase64String(ms.ToArray());
                <img src="data:image/png;base64,@base64String" alt="QR Code" />
            }
        }
    </div>

    <button id="scrollToBottomButton"> <i class="fa fa-chevron-down"></i> </button>
    <button id="scrollToTopButton" onclick="scrollToTop()"> <i class="fa fa-chevron-up"></i> </button>


    <table class="table">
        <tr>
            <th>
                N° Inventaire
            </th>
            <th>
                Date de l'inventaire
            </th>
            <th>
                Date de clôture
            </th>
            <th>
                Code point de vente
            </th>
            <th>
                Libellé point de vente
            </th>
            <th>
                Code dépôt
            </th>
            <th>
                Libellé dépôt
            </th>
        </tr>
        <tr>
            <td>
                @Html.EditorFor(model => model.numinv, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.dateinv, new { htmlAttributes = new { @class = "form-control input-bordered ", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.datecloture, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.codedep, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.libdep, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.codepv, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.libpv, new { htmlAttributes = new { @class = "form-control input-bordered", @readonly = "readonly" } })
            </td>
        </tr>
    </table><hr />
    <br /><br />
        






    <table id="ExpTable" class="table">
        <thead class="sortable">
            <tr>
                <th data-sort="famille">Famille</th>
                <th data-sort="codeart">Code article</th>
                <th data-sort="desart">Désignation</th>
                <th data-sort="qtes">Quantité en stock</th>
                <th data-sort="qtes">Quantité</th>
                <th data-sort="ecartinv">Ecart inventaire</th>
            </tr>
        </thead>
        <tbody class="sortable">
            @for (int i = 0; i < Model.LignesInventaire.Count; i++)
            {
            <tr>
                <td data-order="@Model.LignesInventaire[i].famille">
                    @Html.EditorFor(m => m.LignesInventaire[i].famille, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                <td data-order="@Model.LignesInventaire[i].codeart">
                    @Html.EditorFor(m => m.LignesInventaire[i].codeart, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                <td data-order="@Model.LignesInventaire[i].desart" style="width:250px;">
                    @Html.EditorFor(m => m.LignesInventaire[i].desart, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                <td data-order="@Model.LignesInventaire[i].qtes">
                    @Html.EditorFor(m => m.LignesInventaire[i].qtes, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                
                <td>
                    <input type="text" class="form-control" readonly="readonly" value="@(Model.LignesInventaire[i].qtes - Model.LignesInventaire[i].ecartinv)" />
                </td>

                <td data-order="@Model.LignesInventaire[i].ecartinv">
                    @Html.EditorFor(m => m.LignesInventaire[i].ecartinv, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
            </tr>
            }
        </tbody>
    </table>


    @section Scripts {
        

        
            

        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.css" />
        <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.js"></script>
        <script type="text/javascript">
        $(document).ready(function() {
            $("#generate-pdf").click(function() {
                $.ajax({
                    type: "POST",
                    url: "/Inventaire/GeneratePDF",
                    data: JSON.stringify({ numinv: "@Model.numinv" }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data) {
                        // Create a QR code and append it to the page
                        var qrCode = new QRCode(document.getElementById("qr-code"), {
                            text: data.pdfUrl,
                            width: 128,
                            height: 128,
                            colorDark: "#000000",
                            colorLight: "#ffffff",
                            correctLevel: QRCode.CorrectLevel.H
                        });
                        // Create a link to download the PDF and append it to the page
                        var pdfLink = $("<a>").attr("href", data.pdfUrl).attr("download", data.pdfName).text("Download PDF");
                        $("#pdf-link").empty().append(pdfLink);
                    }
                });
            });
        });
        </script>
        <script>
            $(document).ready(function () {
                $('#ExpTable').DataTable({
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/French.json"
                    },
                    "paging": true,
                    "searching": true,
                    "ordering": true,


                });
            });
        </script>





    }
</body>
</html>
