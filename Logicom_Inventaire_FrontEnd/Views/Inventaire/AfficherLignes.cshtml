@model Logicom_Inventaire_FrontEnd.Models.Inventaire
@using iTextSharp.text
@using iTextSharp.text.pdf
@using QRCoder
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Détails inventaire</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.css" />

    <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>

    <script>
        function generatePdf() {
            var pdf = new jsPDF();
            var options = {
                pagesplit: true
            };
            pdf.addHTML(document.body, options, function () {
                pdf.save('inventaire.pdf');
            });
        }
    </script>
</head>
<body>

    <div style="text-align:center">
        @{
            //string currentUrl = Request.Url.AbsoluteUri;
            QRCodeGenerator qrGenerator = new QRCodeGenerator();
            QRCodeData qrCodeData = qrGenerator.CreateQrCode("https://7bc6-41-226-12-27.eu.ngrok.io/Inventaire/Inventaire/AfficherLignes/" + Model.numinv, QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new QRCode(qrCodeData);
            using (var qrCodeImage = qrCode.GetGraphic(5))
            {
                MemoryStream ms = new MemoryStream();
                qrCodeImage.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                string base64String = Convert.ToBase64String(ms.ToArray());
                <img src="data:image/png;base64,@base64String" alt="QR Code" />
            }
        }
    </div>




    <table class="table">
        <tr>
            <th>
                Numéroo de l'inventaire
            </th>
            <th>
                Date de l'inventaire
            </th>
            <th>
                Code depot
            </th>
            <th>
                Nom depot
            </th>
            <th>
                Code point vente
            </th>
            <th>
                Nom point vente
            </th>


        </tr>

        <tr>

            <td>
                @Html.EditorFor(model => model.numinv, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.dateinv, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.Depot.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.Depot.Libelle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.PointVente.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(model => model.PointVente.Libelle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
        </tr>
    </table><hr />

    <table>
        <tr>

            <td>
                <strong>Code Article</strong>
            </td>
            <td>
                <input class="form-control" type="text" id="codeart" name="codeart"
                       size="10" onkeyup="filtrercodeart()">
            </td>


        </tr>
    </table>



   


    <table id="ExpTable" class="table table-striped table-sm">
        <thead class="sortable">
            <tr>
                <th data-sort="famille">Nom de Famille</th>
                <th data-sort="codeart">Code Article</th>
                <th data-sort="desart">Designation</th>
                <th data-sort="qtes">Quantité en Stock</th>
                <th data-sort="ecartinv">Ecart Inventaire</th>
            </tr>
        </thead>
        <tbody class="sortable">
            @for (int i = 0; i < Model.LignesInventaire.Count; i++)
            {
                <tr>
                    <td data-order="@Model.LignesInventaire[i].famille">
                        @Html.EditorFor(m => m.LignesInventaire[i].famille, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                    <td data-order="@Model.LignesInventaire[i].codeart">
                        @Html.EditorFor(m => m.LignesInventaire[i].codeart, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                    <td data-order="@Model.LignesInventaire[i].desart">
                        @Html.EditorFor(m => m.LignesInventaire[i].desart, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                    <td data-order="@Model.LignesInventaire[i].qtes">
                        @Html.EditorFor(m => m.LignesInventaire[i].qtes, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                    <td data-order="@Model.LignesInventaire[i].ecartinv">
                        @Html.EditorFor(m => m.LignesInventaire[i].ecartinv, new { HtmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                </tr>
            }
        </tbody>
    </table>


    @section Scripts {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
        <script src="https://cdn.jsdelivr.net/jsqrcode/1.0.0/qrscanner.js"></script>

        <script>
            function generatePdf() {
                // Create a new PDF document
                var pdf = new jsPDF();

                // Define the options for the addHTML method
                var options = {
                    pagesplit: true
                };

                // Add the HTML content to the PDF document
                pdf.addHTML(document.body, options, function () {
                    // Get the data from the HTML form
                    var numinv = $('#numinv').val();
                    var dateinv = $('#dateinv').val();
                    var depotCode = $('#Depot_Code').val();
                    var depotLibelle = $('#Depot_Libelle').val();
                    var pointVenteCode = $('#PointVente_Code').val();
                    var pointVenteLibelle = $('#PointVente_Libelle').val();

                    // Create the content for the QR code
                    var qrContent = "Numéro de l'inventaire: " + numinv + "\n" +
                        "Date de l'inventaire: " + dateinv + "\n" +
                        "Code dépôt: " + depotCode + "\n" +
                        "Nom dépôt: " + depotLibelle + "\n" +
                        "Code point de vente: " + pointVenteCode + "\n" +
                        "Nom point de vente: " + pointVenteLibelle;

                    // Create a new QR code image
                    var qrImage = new Image();
                    qrImage.onload = function () {
                        // Add the QR code image to the PDF document
                        pdf.addImage(this, 'PNG', 10, 10, 50, 50);

                        // Save the PDF document
                        pdf.save('inventaire.pdf');
                        pdf.output('dataurlnewwindow');
                    };
                    qrImage.src = QRCode.generatePNG(qrContent, { ecclevel: 'Q' });
                });
            }
        </script>

        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.css" />
        <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.11.3/datatables.min.js"></script>
        <script type="text/javascript">
        $(document).ready(function() {
            $("#generate-pdf").click(function() {
                $.ajax({
                    type: "POST",
                    url: "/Inventaire/GeneratePDF",
                    data: JSON.stringify({ numinv: "@Model.numinv" }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data) {
                        // Create a QR code and append it to the page
                        var qrCode = new QRCode(document.getElementById("qr-code"), {
                            text: data.pdfUrl,
                            width: 128,
                            height: 128,
                            colorDark: "#000000",
                            colorLight: "#ffffff",
                            correctLevel: QRCode.CorrectLevel.H
                        });
                        // Create a link to download the PDF and append it to the page
                        var pdfLink = $("<a>").attr("href", data.pdfUrl).attr("download", data.pdfName).text("Download PDF");
                        $("#pdf-link").empty().append(pdfLink);
                    }
                });
            });
        });
        </script>
        <script>
            $(document).ready(function () {
                $('#ExpTable').DataTable({
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/French.json"
                    },
                    "paging": true,
                    "searching": true,
                    "ordering": true,
                    
                    
                });
            });
        </script>




        <script>

            function filtrercodeart() {
                var filtre, tableau, ligne, cellule, i, texte
                filtre = document.getElementById("codeart").value.toUpperCase();
                tableau = document.getElementById("ExpTable");
                ligne = tableau.getElementsByTagName("tr");
                for (i = 0; i < ligne.length; i++) {

                    cellule = ligne[i].getElementsByTagName("td")[1];
                    if (cellule) {
                        texte = cellule.innerHTML;
                        if (texte.indexOf(filtre) > -1) {
                            ligne[i].style.display = "";
                        }
                        else {
                            ligne[i].style.display = "none";
                        }
                    }
                }
            }
            function filtrerdesart() {
                var filtre, tableau, ligne, cellule, i, texte
                filtre = document.getElementById("desart").value.toUpperCase();
                tableau = document.getElementById("ExpTable");
                ligne = tableau.getElementsByTagName("tr");
                for (i = 0; i < ligne.length; i++) {

                    cellule = ligne[i].getElementsByTagName("td")[2];
                    if (cellule) {
                        texte = cellule.innerHTML;
                        if (texte.indexOf(filtre) > -1) {
                            ligne[i].style.display = "";
                        }
                        else {
                            ligne[i].style.display = "none";
                        }
                    }
                }
            }
        </script>
    }
</body>
</html>
